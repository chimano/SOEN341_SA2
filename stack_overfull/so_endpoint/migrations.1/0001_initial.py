# Generated by Django 2.0.1 on 2018-03-14 16:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('points', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('job_id', models.IntegerField(primary_key=True, serialize=False)),
                ('position', models.CharField(default=None, max_length=48)),
                ('job_type', models.CharField(choices=[('FT', 'Full-time'), ('PT', 'Part-time'), ('IN', 'Internship'), ('CT', 'Contract'), ('TP', 'Temporary'), ('TN', 'Trainee')], default=None, max_length=2)),
                ('category', models.CharField(choices=[('Arts', (('PG', 'Photography'), ('AT', 'Architechture'), ('MS', 'Music'), ('TH', 'Theatre'))), ('Administration', (('RC', 'Receptionist'), ('CD', 'Coordinator'), ('PA', 'Payroll Administrator'))), ('Commerce', (('SR', 'Sales Representative'), ('AC', 'Accountant'), ('MK', 'Marketing'))), ('Engineering', (('CS', 'Computer Science'), ('SE', 'Software Engineering'), ('MC', 'Mechanical Engineering'), ('EC', 'Electrical Engineering'), ('ID', 'Industrial Engineering'))), ('Education', (('TT', 'Tutor'), ('ES', 'Elementary School Teacher'), ('HC', 'Highschool Teacher'), ('CG', 'Cegep Teacher'), ('UN', 'University Teacher'))), ('Science', (('BL', 'Biology'), ('CH', 'Chemistry'), ('PS', 'Physics'), ('SC', 'Sociology'), ('GS', 'Geoscience')))], default=None, max_length=2)),
                ('company', models.CharField(default=None, max_length=48)),
                ('location', models.CharField(default=None, max_length=84)),
                ('description', models.TextField()),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_me', models.TextField(default='Add something about yourself')),
                ('reputation', models.IntegerField(default=0)),
                ('downvoted_answers', models.ManyToManyField(blank=True, related_name='down_answers', to='so_endpoint.Answer')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_head', models.CharField(default=None, max_length=128, null=True)),
                ('question_text', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('points', models.IntegerField(default=0)),
                ('accepted_answer_id', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_answer_set', to='so_endpoint.Answer')),
                ('rejected_answers_ids', models.ManyToManyField(blank=True, related_name='rejected_answers_set', to='so_endpoint.Answer')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_text', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='question_set', to='so_endpoint.Tag'),
        ),
        migrations.AddField(
            model_name='question',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='profile',
            name='downvoted_questions',
            field=models.ManyToManyField(blank=True, related_name='down_questions', to='so_endpoint.Question'),
        ),
        migrations.AddField(
            model_name='profile',
            name='upvoted_answers',
            field=models.ManyToManyField(blank=True, related_name='up_answers', to='so_endpoint.Answer'),
        ),
        migrations.AddField(
            model_name='profile',
            name='upvoted_questions',
            field=models.ManyToManyField(blank=True, related_name='up_questions', to='so_endpoint.Question'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='question_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='so_endpoint.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
