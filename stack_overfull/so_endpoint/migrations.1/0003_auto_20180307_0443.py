# Generated by Django 2.0.1 on 2018-03-07 04:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('so_endpoint', '0002_question_question_head'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_text', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AlterField(
            model_name='profile',
            name='downvoted_answers',
            field=models.ManyToManyField(blank=True, related_name='down_answers', to='so_endpoint.Answer'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='downvoted_questions',
            field=models.ManyToManyField(blank=True, related_name='down_questions', to='so_endpoint.Question'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='upvoted_answers',
            field=models.ManyToManyField(blank=True, related_name='up_answers', to='so_endpoint.Answer'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='upvoted_questions',
            field=models.ManyToManyField(blank=True, related_name='up_questions', to='so_endpoint.Question'),
        ),
        migrations.AlterField(
            model_name='question',
            name='accepted_answer_id',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_answer_set', to='so_endpoint.Answer'),
        ),
        migrations.AlterField(
            model_name='question',
            name='rejected_answers_ids',
            field=models.ManyToManyField(blank=True, related_name='rejected_answers_set', to='so_endpoint.Answer'),
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='question_set', to='so_endpoint.Tag'),
        ),
    ]
